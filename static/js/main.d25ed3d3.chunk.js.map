{"version":3,"sources":["api.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Header","header","CoinsList","ul","Coin","li","props","theme","bgColor","accentColor","Title","h1","Loader","span","Img","img","Coins","useQuery","isLoading","data","Helmet","slice","map","coin","to","pathname","id","state","name","src","symbol","toLowerCase","Chart","coinId","res","fetchCoinHistory","refetchInterval","type","series","price","time_close","open","high","low","close","options","chart","height","width","toolbar","show","background","stroke","curve","yaxis","xaxis","categories","labels","style","colors","plotOptions","candlestick","upward","downward","Wrapper","Block","Price","console","log","quotes","USD","percent_change_1h","percent_change_6h","percent_change_12h","percent_change_24h","percent_change_7d","percent_change_30d","percent_change_1y","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","ToBack","prop","useParams","useLocation","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","isInfoLoading","info","fetchCoinTickers","isPriceLoading","loading","rank","toFixed","description","total_supply","max_supply","path","GlobalStyle","createGlobalStyle","Router","basename","process","darktheme","lighttheme","ToggleWrapper","Toggle","button","App","useState","isDark","setIsDark","onClick","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.d25ed3d3.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev/?coinId=${coinId}`\n  ).then((res) => res.json());\n}\n","import { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: grey;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://coinicons-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((price) => {\n                return [\n                  price.time_close,\n                  price.open,\n                  price.high,\n                  price.low,\n                  price.close,\n                ];\n              }),\n            },\n          ]}\n          options={{\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            stroke: {\n              curve: \"smooth\",\n              width: 2,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              type: \"datetime\",\n              categories: data?.map((price) => price.time_close),\n              labels: {\n                style: {\n                  colors: \"#9c88ff\",\n                },\n              },\n            },\n            plotOptions: {\n              candlestick: {\n                colors: {\n                  upward: \"#3C90EB\",\n                  downward: \"#DF7D46\",\n                },\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","import styled from \"styled-components\";\n\ninterface Iprice {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: grey;\n  border-radius: 15px;\n`;\nconst Block = styled.div`\n  background-color: lightgrey;\n  width: 90%;\n  height: 30px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px;\n  border-radius: 10px;\n`;\nfunction Price({ price }: any) {\n  console.log(price);\n  return (\n    <Wrapper>\n      <Block>\n        <h1>1시간전: {price.quotes.USD.percent_change_1h} %</h1>\n      </Block>\n      <Block>\n        <h1>6시간전: {price.quotes.USD.percent_change_6h} %</h1>\n      </Block>\n      <Block>\n        <h1>12시간전: {price.quotes.USD.percent_change_12h} %</h1>\n      </Block>\n      <Block>\n        <h1>1일전: {price.quotes.USD.percent_change_24h} %</h1>\n      </Block>\n      <Block>\n        <h1>7일전: {price.quotes.USD.percent_change_7d} %</h1>\n      </Block>\n      <Block>\n        <h1>30일전: {price.quotes.USD.percent_change_30d} %</h1>\n      </Block>\n      <Block>\n        <h1>1년전: {price.quotes.USD.percent_change_1y} %</h1>\n      </Block>\n    </Wrapper>\n  );\n}\n\nexport default Price;\n","import { useQuery } from \"react-query\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    padding: 7px 0px;\n    display: block;\n  }\n`;\nconst ToBack = styled.div`\n  color: ${(prop) => prop.theme.textColor};\n  font-size: 30px;\n  position: absolute;\n  left: 150px;\n`;\ninterface RouterParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface info {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface Iprice {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouterParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: isInfoLoading, data: info } = useQuery<info>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: isPriceLoading, data: price } = useQuery<Iprice>(\n    [\"price\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n  const loading = isInfoLoading || isPriceLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : info?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <ToBack>\n          <Link to=\"/\">\n            <span>← </span>\n          </Link>\n        </ToBack>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : info?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{info?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${info?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${price?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{info?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{price?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{price?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price price={price} />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darktheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n\nexport const lighttheme: DefaultTheme = {\n  bgColor: \"#f5f6fa\",\n  textColor: \"#2f3640\",\n  accentColor: \"#9c88ff\",\n};\n","import styled, { ThemeProvider } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { useState } from \"react\";\nimport { darktheme, lighttheme } from \"./theme\";\n\nconst ToggleWrapper = styled.div`\n  top: 40px;\n  position: absolute;\n  width: 100%;\n  display: flex;\n  left: 150px;\n  justify-content: center;\n`;\nconst Toggle = styled.button``;\n\nfunction App() {\n  const [isDark, setIsDark] = useState(false); // 테마 모드 세팅\n  const theme = isDark ? darktheme : lighttheme; // 테마 환경에 맞는 테마 컬러 가져오기.\n  const toggleTheme = () => setIsDark(!isDark); // 테마 변경하기 이벤트\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <ToggleWrapper>\n          <Toggle onClick={toggleTheme}>toggle</Toggle>\n        </ToggleWrapper>\n\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport App from \"./App\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}